name: Deploy and Destroy Terraform SCP
on:
  push:
    branches:
      - main
    paths:
      - 'Organizations-SCP/**'  # Se ejecuta automáticamente para despliegues
  workflow_dispatch:  # Permite ejecutar manualmente para otras tareas (por ejemplo, destroy)

jobs:
  terraform_apply:
    name: Deploy Terraform Job
    if: github.event_name == 'push'  # Este paso solo se ejecuta en un push
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Configurar las credenciales para la cuenta de despliegue
      - name: Configure AWS credentials for deployment
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEPLOY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEPLOY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_DEPLOY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Paso 3: Inicializar Terraform
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./Organizations-SCP

      # Paso 4: Aplicar Terraform
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./Organizations-SCP

  terraform_destroy:
    name: Destroy Terraform Job
    if: github.event_name == 'workflow_dispatch'  # Solo se ejecuta manualmente
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Configurar las credenciales para la cuenta de despliegue
      - name: Configure AWS credentials for deployment
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEPLOY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEPLOY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_DEPLOY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Paso 3: Inicializar Terraform
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./Organizations-SCP

      # Paso 4: Ejecutar Terraform Destroy
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./Organizations-SCP
