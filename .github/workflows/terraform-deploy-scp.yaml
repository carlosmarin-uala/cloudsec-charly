name: Deploy Terraform SCP
on:
  push:
    branches:
      - main
    paths:
      - 'Organizations-SCP/**'  # Solo se ejecuta cuando hay cambios en la carpeta 'Organizations (SCP)'

jobs:
  terraform:
    name: Deploy Terraform Job
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout el código
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3 

      # Paso 2: Configurar las credenciales para el backend (la cuenta donde está el estado de Terraform)
      # Este paso usa las credenciales del backend para poder acceder a S3 y realizar el 'terraform init' y 'terraform plan'
      - name: Configure AWS credentials for backend
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_BACKEND }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_BACKEND }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_BACKEND }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Paso 3: Inicializar Terraform (con las credenciales del backend)
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./Organizations-SCP

      # Paso 4: Configurar las credenciales para la cuenta de despliegue (solo para crear recursos)
      # Este paso cambia las credenciales para poder ejecutar 'terraform apply' en la cuenta de despliegue
      - name: Configure AWS credentials for deployment
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEPLOY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEPLOY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_DEPLOY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Paso 5: Ejecutar terraform plan (con las credenciales del backend para acceder al estado, pero también puede usar la cuenta de deploy)
      # Aquí 'terraform plan' accede al estado del backend con las credenciales del backend
      - name: Terraform Plan
        run: terraform plan
        working-directory: ./Organizations-SCP

      # Paso 6: Ejecutar terraform apply (con las credenciales de despliegue para poder crear los recursos)
      # Aquí 'terraform apply' se ejecuta con las credenciales del deploy, que tienen permisos para gestionar los recursos
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./Organizations-SCP